import cv2
from cvzone.HandTrackingModule import HandDetector
import pyautogui

width, height = 728, 720
cap = cv2.VideoCapture(0)
cap.set(3,width)
cap.set(4,height)   
buttonPressed = False
buttonCounter = 0
buttonDelay = 5

detector = HandDetector(detectionCon = 0.8, maxHands = 2)
while True:
    success, img = cap.read()
    hands,img = detector.findHands(img)
    if hands and buttonPressed is False:
        hand1 = hands[0]
        handType1 = hand1["type"]
        fingers1 = detector.fingersUp(hand1)
        # print(fingers1)
        
        if len(hands)==2:
            hand2 = hands[1]
            handType2 = hand2["type"]
            fingers2 = detector.fingersUp(hand2)
            # print(fingers1,fingers2)

            # Gesture 21 - Terminate
            if fingers1==[1,0,0,0,0] and fingers2==[1,0,0,0,0]:
                pyautogui.press("q")
                buttonPressed = True

            # Gesture 22 - Escape
            if fingers1==[0,1,0,0,0] and fingers2==[0,0,0,0,0]:
                pyautogui.press("esc")  
                buttonPressed = True

            # Gesture 23 - Windows
            if fingers1==[0,1,1,0,0] and fingers2==[0,0,0,0,0]:
                pyautogui.press("win")
                buttonPressed = True

            # Gesture 24 - Capitalize
            if fingers1==[0,1,1,1,0] and fingers2==[0,0,0,0,0]:
                pyautogui.press("capslock")
                buttonPressed = True
                
            # Gesture 25 - NumsLock
            if fingers1==[0,1,1,1,1] and fingers2==[0,0,0,0,0]:
                pyautogui.press("numlock")
                buttonPressed = True

            # Gesture 26 - Full Screen
            if fingers1==[1,1,1,1,1] and fingers2==[0,0,0,0,0]:
                with pyautogui.hold("fun"):
                    pyautogui.press("f11")
                    buttonPressed = True
            
        if handType1=="Right":
            # Gesture 1 - Left
            if fingers1 == [1,0,0,0,0]:
                pyautogui.press("left")
                buttonPressed = True

            # Gesture 2 - Right
            if fingers1 == [0,0,0,0,1]:
                pyautogui.press("right")
                buttonPressed = True
            
            # Gesture 3 - Up
            if fingers1 == [0,1,0,0,0]:
                pyautogui.press("up")
                buttonPressed = True
            
            # Gesture 4 - Down
                
            if fingers1 == [0,1,1,0,0]:
                pyautogui.press("down")
                buttonPressed = True
            
            # Gesture 5 - Select/Enter 
            if fingers1 == [1,1,1,1,1]:
                pyautogui.press("enter")
                buttonPressed = True
            
            # Gesture 6 - Close
            if fingers1 == [0,1,1,1,1]:
                with pyautogui.hold("alt"):
                    pyautogui.press("f4")
                    buttonPressed = True
            
            # Gesture 7 - Minimize
            if fingers1 == [1,1,0,0,0]:
                with pyautogui.hold("win"):
                    pyautogui.press("m")
                    buttonPressed = True
            
            # Gesture 8 - Maximize
            if fingers1 == [1,1,1,0,0]:
                with pyautogui.hold("win"):
                    with pyautogui.hold("shift"):
                        pyautogui.press("m")
                        buttonPressed = True
            
            # Gesture 9 - Screenshot
            if fingers1 == [0,1,0,0,1]:          
                with pyautogui.hold("win"):
                    with pyautogui.hold("shift"):
                        pyautogui.press("s")
                        buttonPressed = True
            
            # Gesture 10 - Change Desktop Tabs
            if fingers1 == [0,1,1,1,0]:
                with pyautogui.hold("alt"):
                    pyautogui.press("tab") and pyautogui.hold("alt")
                    buttonPressed = True
                                                                                                                                                                                
        else:
            # Gesture 11 - Next Tab
            if fingers1 == [0,1,0,0,0]:
                pyautogui.press("tab")
                buttonPressed = True
                
            
            # Gesture 12 - Previous Tab
            if fingers1==[0,1,1,0,0]:
                with pyautogui.hold("shift"):
                    pyautogui.press("tab")
                    buttonPressed = True
            
            # Gesture 13 - Next Tab in Chrome
            if fingers1 == [1,0,0,0,0]:
                with pyautogui.hold("ctrl"):
                    pyautogui.press("tab")
                    buttonPressed = True
            
            # Gesture 14 - Previous Tab in Chorme
            if fingers1 == [0,0,0,0,1]:
                with pyautogui.hold("ctrl"):
                    with pyautogui.hold("shift"):
                        pyautogui.press("tab")
                        buttonPressed = True
            
            # Gesture 15 - New Tab in Chrome
            if fingers1 == [0,1,1,1,0]:
                with pyautogui.hold("ctrl"):
                    pyautogui.press("t")
                    buttonPressed = True
            
            # Gesture 16 - Open Recently Closed Tab in Chrome
            if fingers1 == [0,1,1,1,1]:
                with pyautogui.hold("ctrl"):
                    with pyautogui.hold("shift"):
                        pyautogui.press("t")
                        buttonPressed = True
                            
            # Gesture 17 - Go to Back
            if fingers1 == [0,1,0,0,1]:
                pyautogui.press("backspace")
                buttonPressed = True

            # Gesture 18 - Play/Pause Youtube Video
            if fingers1 == [1,1,1,1,1]:
                pyautogui.press("space")
                buttonPressed = True

            # Gesture 19 - Volume Up
            if fingers1==[1,1,0,0,0]:
                pyautogui.press("volumeup")
                buttonPressed = True

            # Gesture 20 - Volume Down
            if fingers1==[1,1,1,0,0]:
                pyautogui.press("volumedown")
                buttonPressed = True
    if buttonPressed:
        buttonCounter += 1
        if buttonCounter > buttonDelay:
            buttonCounter = 0
            buttonPressed = False

    img = cv2.flip(img, 1)

    cv2.imshow("Image",img)

    key = cv2.waitKey(1)
    if key == ord('w'):
        break
webcam.release()
cv2.destroyAllWindows()

    
